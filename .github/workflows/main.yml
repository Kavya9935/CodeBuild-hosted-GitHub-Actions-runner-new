name: Hello World
on: [push]

jobs:
  Hello-World-Job:
    runs-on:
      - codebuild-Demo-${{ github.run_id }}-${{ github.run_attempt }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Debug AWS Environment
        if: ${{ always() }}
        run: |
          set -x
          echo "=== AWS Environment Debug ==="
          echo "Testing AWS CLI access..."
          aws sts get-caller-identity || echo "AWS CLI failed: $?"
          
          echo "Current AWS region:"
          aws configure get region || echo "No default region set"
          
          echo "Environment variables:"
          env | grep -E "(AWS|CODEBUILD)" || echo "No AWS/CodeBuild vars found"

      - name: Emit runner->CB binding
        env:
          LOG_GROUP: /gha-runner/bindings
          AWS_REGION: us-east-1         # set to your region
          AWS_DEFAULT_REGION: us-east-1 # belt-and-suspenders
        run: |
          set -euxo pipefail
          aws --version
          aws sts get-caller-identity   # proves credentials exist
          aws configure list            # prints the region the CLI will use
      
          TS=$(date +%s%3N)
          MSG="{\"run_id\":\"$GITHUB_RUN_ID\",\"attempt\":\"$GITHUB_RUN_ATTEMPT\",\"repo\":\"$GITHUB_REPOSITORY\",\"workflow\":\"$GITHUB_WORKFLOW\",\"cb\":\"${CODEBUILD_BUILD_ID:-unknown}\",\"labels\":\"${RUNNER_LABELS:-unknown}\"}"
      
          # Create (idempotent)
          aws logs create-log-group  --log-group-name "$LOG_GROUP" || true
          aws logs create-log-stream --log-group-name "$LOG_GROUP" --log-stream-name "default" || true
      
          TOKEN=$(aws logs describe-log-streams \
            --log-group-name "$LOG_GROUP" \
            --log-stream-name-prefix "default" \
            --query 'logStreams[0].uploadSequenceToken' \
            --output text || true)
      
          if [ -z "$TOKEN" ] || [ "$TOKEN" = "None" ]; then
            aws logs put-log-events \
              --log-group-name "$LOG_GROUP" \
              --log-stream-name "default" \
              --log-events timestamp=$TS,message="$MSG"
          else
            aws logs put-log-events \
              --log-group-name "$LOG_GROUP" \
              --log-stream-name "default" \
              --sequence-token "$TOKEN" \
              --log-events timestamp=$TS,message="$MSG"
          fi






